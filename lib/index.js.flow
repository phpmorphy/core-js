/**
 * Flowtype definitions for index
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.11.0
 * @flow
 */

declare export class Address {
  static Genesis: number;
  static Umi: number;
  constructor(): this;
  getVersion(): number;
  setVersion(version: number): this;
  getPublicKey(): PublicKey;
  setPublicKey(publicKey: PublicKey): this;
  getPrefix(): string;
  setPrefix(prefix: string): this;
  toBech32(): string;
  toBytes(): number[];
  static fromBytes(bytes: number[] | Uint8Array | Buffer): Address;
  static fromBech32(bech32: string): Address;
  static fromKey(key: PublicKey | SecretKey): Address;
}
declare export class Block {}
declare export class BlockHeader {}
declare export class PublicKey {
  constructor(bytes: number[] | Uint8Array | Buffer): this;
  toBytes(): number[];
  getPublicKey(): this;
  verifySignature(
    signature: number[] | Uint8Array | Buffer,
    message: number[] | Uint8Array | Buffer
  ): boolean;
}
declare export class SecretKey {
  constructor(bytes: number[] | Uint8Array | Buffer): this;
  toBytes(): number[];
  getPublicKey(): PublicKey;
  sign(message: number[] | Uint8Array | Buffer): number[];
  static fromSeed(seed: number[] | Uint8Array | Buffer): SecretKey;
}
declare export class Transaction {
  static Genesis: number;
  static Basic: number;
  static CreateStructure: number;
  static UpdateStructure: number;
  static UpdateProfitAddress: number;
  static UpdateFeeAddress: number;
  static CreateTransitAddress: number;
  static DeleteTransitAddress: number;
  toBytes(): number[];
  toBase64(): string;
  getHash(): number[];
  getVersion(): number;
  setVersion(version: number): this;
  getSender(): Address;
  setSender(address: Address): this;
  getRecipient(): Address;
  setRecipient(address: Address): this;
  getValue(): number;
  setValue(value: number): this;
  getNonce(): number;
  setNonce(nonce: number): this;
  getSignature(): number[] | Uint8Array | Buffer;
  setSignature(signature: number[] | Uint8Array | Buffer): this;
  sign(secretKey: SecretKey): this;
  verify(): boolean;
  getPrefix(): string;
  setPrefix(prefix: string): this;
  getName(): string;
  setName(name: string): this;
  getProfitPercent(): number;
  setProfitPercent(percent: number): this;
  getFeePercent(): number;
  setFeePercent(percent: number): this;
  static fromBase64(base64: string): Transaction;
  static fromBytes(bytes: number[] | Uint8Array | Buffer): Transaction;
}
